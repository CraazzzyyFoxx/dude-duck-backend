version: '3.8'

services :
  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
  app:
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./logs:/logs
    command: uvicorn main:app --host 0.0.0.0 --port ${PORT}
    environment:
      - DEBUG=${DEBUG}
      - TELEGRAM_INTEGRATION=${TELEGRAM_INTEGRATION}
    ports:
      - "${PORT}:${PORT}"
  worker:
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
    command: celery -A app.services.tasks.service.celery worker --beat --loglevel=info --concurrency=2
    volumes:
      - ./app:/app
    environment:
      - CELERY_SHEETS_SYNC_TIME=${CELERY_SHEETS_SYNC_TIME}
      - SYNC_BOOSTERS=${SYNC_BOOSTERS}
    depends_on:
      - redis
  flower:
    build: .
    command: celery --broker=${CELERY_BROKER_URL} flower --port=5555 --url_prefix=flower
    ports:
      - "5555:5555"
    depends_on:
      - redis
      - worker
  postgres:
    image: postgres:14.8-alpine3.18
    environment:
      POSTGRES_DB: "${POSTGRES_DB}"
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256MB
    networks:
      - postgres

networks:
  postgres:
    driver: bridge

volumes:
  postgres_data:
  pgadmin-data: